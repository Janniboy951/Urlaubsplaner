name: Android Build

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    # *******Setup Node and Expo*******
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.1.0
      with:
        node-version: '16'
    - name: 🏗 Setup Expo
      uses: expo/expo-github-action@v7
      with:
        expo-version: latest
        token: ${{ secrets.EXPO }}
        
    - name: 📦 Install dependencies
      run: yarn install
    - name: Expo Eject
      run: expo eject
    

      
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
        
    - name: Grant execute permission for gradlew
      working-directory: ./android
      run: chmod +x ./gradlew
    - name: Build with Gradle
      working-directory: ./android
      run: ./gradlew assembleRelease 
    
    - name: Get JKS Keystore
      run: |
        echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
        
    - name: Decrypt JKS Keystore
      run: gpg -d --passphrase '${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}' --batch release.keystore.asc > android/app/build/outputs/apk/release/release_keystore.jks
    
    - name: Install apksigner
      run: sudo apt-get install -y apksigner
    
        
    - name: Sign APK
      working-directory: ./android/app/build/outputs/apk/release
      run: apksigner sign --ks release_keystore.jks --ks-key-alias '${{ secrets.KEY_ALIAS }}' --ks-pass pass:'${{ secrets.KEYSTORE_PASSWORD }}' --key-pass pass:'${{ secrets.KEY_PASSWORD }}' --out app-release-signed.apk app-release.apk


      #run: apksigner sign --ks release_keystore.jks --out app-release-signed.apk app-release.apk
    
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Urlaubsplaner ${{ github.ref_name }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload APK File
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./android/app/build/outputs/apk/release/app-release-signed.apk
        asset_name: Urlaubsplaner_${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive
